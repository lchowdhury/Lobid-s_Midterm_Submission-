Please answer the below core-java Questions:

What is programing language?
A. A programming language is a computer language engineered to create a standard form of commands.

What jdk contains or composed of and define each components?
A. The Java Developer's Kit contains a variety of tools and Java development information. Following is a list of the main components of the JDK:

   The Runtime Interpreter
   The Compiler
   The Applet Viewer
   The Debugger
   The Class File Disassembler
   The Header and Stub File Generator
   The Documentation Generator
   Applet Demos
   API Source Code


What is IDE?

A. Intigrated Devolopmengt Envoirnment


Eclipse.
NetBeans.
BlueJ.
IntelliJ .
jEdit.
DrJava.
Android Studio.
JCreator.


Explain the entire java life cycle.
The life cycle of the thread in java is controlled by JVM. The java thread states are as follows:

New
Runnable
Running
Non-Runnable (Blocked)
Terminated



what is class?
Class is blue print of object .


What is object?
object is a instance of class.


What is the entry point of an application?
The main method is the entry point of a Java application

Why main is static?
This is neccesary because main() is called by the JVM before any objects are made. Since it is static it can be directly invoked via the class


Which class is the superclass of all classes?
java.lang.Object is a super class of any class by default. The root class of the Java class hierarchy.
All non-primitive types (including arrays) inherit either directly or indirectly from this class.
Object is the super class of all other classes you use, including the ones you implemented.


What is difference between path and classpath variables?
1).Path is an environment variable which is used by the operating system to find the executables.
Classpath is an environment variable which is used by the Java compiler to find the path, of classes.ie in J2EE we give the path of jar files.
2).PATH is nothing but setting up an environment for operating system.


What is the difference between an Interface and Abstract class?
Main difference is methods of a Java interface are implicitly abstract and cannot have implementations.
A Java abstract class can have instance methods that implements a default behavior.
Variables declared in a Java interface is by default final. An abstract class may contain non-final variables.


Can you make an Object from an Interface and Abstract class ? if not how do you use it ?
There are two ways you can achieve this.
 1) Either you extend / implement the Abstract class / interface in a new class, create the object of this new class and then use this object as per your need.
 2) The Compiler allows you to create anonymous objects of the interfaces in your code


what is Access Specifier?
In Java, methods and data members of a class/interface can have one of the following four access specifiers. The access specifiers are listed according to their restrictiveness order.
1) private
2) default (when no access specifier is specified)
3) protected
4) public




What is OOP ? Define each feature of java OOP.
OOP concepts in Java are the main ideas behind Java’s Object Oriented Programming.
They are an abstraction, encapsulation, inheritance, and polymorphism.

Abstraction. Abstraction means using simple things to represent complexity. We all know how to turn the TV on, but we don’t need to know how it works in order to enjoy it.
In Java, abstraction means simple things like objects, classes, and variables represent more complex underlying code and data.
This is important because it lets avoid repeating the same work multiple times.


Encapsulation. This is the practice of keeping fields within a class private, then providing access to them via public methods.
It’s a protective barrier that keeps the data and code safe within the class itself.
This way, we can re-use objects like code components or variables without allowing open access to the data system-wide.

Inheritance. This is a special feature of Object Oriented Programming in Java.
It lets programmers create new classes that share some of the attributes of existing classes.
This lets us build on previous work without reinventing the wheel.


Polymorphism. This Java OOP concept lets programmers use the same word to mean different things in different contexts.
One form of polymorphism in Java is method overloading. That’s when different meanings are implied by the code itself. The other form is method overriding.
That’s when the different meanings are implied by the values of the supplied variables. See more on this below.




What is Java Package and which package is imported by default?
java.lang package is imported by default, no need to explicitly import it.
Classes in the java.lang package do not need to be imported (the compiler acts like they are always imported)



What is API? Name list of API that you have used so far.
Appilication Programming Interface .

Array
ArrayBlockingQueue
ArrayDeque
ArrayIndexOutOfBoundsException
ArrayList
Arrays
ArrayStoreException
ArrayType
Scanner
map
HashMap
HTML
HTML.Attribute
HTML.Tag
HTML.UnknownTag
HTMLDocument
ParseConversionEventImpl
ParseException
ParsePosition
Parser
ParserAdapter etc.....



Does java support multiple inheritance, explain why or why not?
No java doesn't support multiple inheritance directly because it leads to overiding of methods when both extended class have a same method name.



What is method overloading and when it happens?
Method Overloading is a feature that allows a class to have more than one method having the same name, if their argument lists are different.
It is similar to constructor overloading in Java, that allows a class to have more than one constructor having different argument lists.


Explain exceptions in java and how to handle it.
An exception object is an instance of an exception class. It gets created and handed to the Java runtime when an exceptional event occurred that disrupted the normal flow of the application.
This is called “to throw an exception” because in Java you use the keyword “throw” to hand the exception to the runtime.


What is static keyword in java? How it has been used in variables and methods ?
If you apply static keyword with any method, it is known as static method. A static method belongs to the class rather than the object of a class.
A static method can be invoked without the need for creating an instance of a class. A static method can access static data member and can change the value of it.


What is final and how it has been used variables and methods?
final keyword in java. final keyword is used in different contexts. First of all, final is a non-access modifier applicable only to a variable, a method or a class.Following are different contexts where final is used.
When a variable is declared with final keyword, its value can't be modified, essentially, a constant.




What is final, finally and finalize?
Final class can't be inherited, final method can't be overridden and final variable value can't be changed.
Finally is used to place important code, it will be executed whether exception is handled or not.
Finalize is used to perform clean up processing just before object is garbage collected. 2) Final is a keyword.



What is a constructor ?
A constructor in Java is a block of code similar to a method that's called when an instance of an object is created.



A class can have multiple constructors, as long as their signature (the parameters they take) are not the same.
You can define as many constructors as you need.
When a Java class contains multiple constructors, we say that the constructor is overloaded (comes in multiple versions)


If we don't have a constructor declared, what is called during the object creation?
If you don't specify a constructor, a default constructor will be generated by the compiler.


What is "this" keyword in java ?
Keyword THIS is a reference variable in Java that refers to the current object. ... It can be used to refer instance variable of current class.
It can be used to invoke or initiate current class constructor. It can be passed as an argument in the method call.




What is "super" keyword in java? How many possible way can you use?
super is a keyword. It is used inside a sub-class method definition to call a method defined in the super class.
Private methods of the super-class cannot be called.
Only public and protected methods can be called by the super keyword. It is also used by class constructors to invoke constructors of its parent class.



What is JVM stand for ?
java vertual machine


Is JVM platform independent?
yes


What version of java are you using?
java version "1.8.0_191"
Java(TM) SE Runtime Environment (build 1.8.0_191-b12)
Java HotSpot(TM) 64-Bit Server VM (build 25.191-b12, mixed mode)




What is JAR stand for ?
Java archive file


What is the difference between JDK and JVM?
JVM is Java Virtual Machine, the JVM actually runs Java bytecode. JDK is Java Developer Kit, the JDK is what you need to compile Java source code.


What is the difference between JVM and JRE?
RE is Java Runtime Environment, is what you need to run a Java program and contains a JVM, among other things.
JVM (Java Virtual Machine) is an abstract machine.


What is compile time and run time?
This compilation process is referred to as compile time.
A compiled program can be opened and run by a user. When an application is running, it is called runtime.



What is heap?
heap is a memory



How java manage it's memory?
The JVM loads the code, verifies the code, executes the code, manages memory (this includes allocating memory from the Operating System (OS),
managing Java allocation including heap compaction and removal of garbage objects) and finally provides the runtime environment



What is the difference between String, StringBuffer and StringBuilder?
StringBuffer is mutable means one can change the value of the object . The object created through StringBuffer is stored in the heap.
StringBuffer has the same methods as the StringBuilder , but each method in StringBuffer is synchronized that is StringBuffer is thread safe .



What is Singleton class?
In object-oriented programming, a singleton class is a class that can have only one object (an instance of the class) at a time.



What is Serialization and Deserialization?

Serialization is a mechanism of converting the state of an object into a byte stream.

Deserialization is the reverse process where the byte stream is used to recreate the actual Java object in memory.
This mechanism is used to persist the object.



when to use transient variable in java?

The Java transient keyword is used on class attributes/variables to indicate that serialization process of such class should ignore such variables while creating a persistent byte stream for any instance of that class.
A transient variable is a variable that can not be serialized.



Difference between while and do..while loop?

The most important difference between while and do-while loop is that in do-while , the block of code is executed at least once,
even though the condition given is false.
To put it in a different way : ... In While loop, the condition is first tested and then the block of code is executed if the test result is true.



What is Enum?
A Java Enum is a special Java type used to define collections of constants.
More precisely, a Java enum type is a special kind of Java class. An enum can contain constants, methods etc.
Java enums were added in Java 5


What is Iterator?
An iterator over a Collection. Iterator takes the place of Enumeration in the Java collections framework.
Iterators differ from Enumerations in two ways: Iterators allow the caller to remove elements from the underlying collection during the iteration with well-defined semantics.


Which one will take more memory, an int or Integer?
integer


Why is String Immutable in Java?
The string is Immutable in Java because String objects are cached in String pool. ...
Another reason of why String class is immutable could die due to HashMap.
Since Strings are very popular as HashMap key, it's important for them to be immutable so that they can retrieve the value object which was stored in HashMap.



What is constructor chaining in Java?
Constructor chaining is the process of calling one constructor from another constructor with respect to current object.
Constructor chaining can be done in two ways: Within same class: It can be done using this() keyword for constructors in same class.




The difference between Serial and Parallel Garbage Collector?
a serial collector is a default copying collector which uses only one GC thread for the GC operation,
while a parallel collector uses multiple GC threads for the GC operation.


What is JIT stands for?
JIT stands for Just In time


Explain Java Heap space and Garbage collection?
Java objects reside in an area called the heap. The heap is created when the JVM starts up and may increase or decrease in size while the application runs. When the heap becomes full,
garbage is collected. During the garbage collection objects that are no longer used are cleared, thus making space for new objects.




Can you guarantee the garbage collection process?

System.gc() and Runtime.gc() are hooks to request the JVM to initiate the garbage collection process. ... It can choose to reject the request and so it is not guaranteed that these calls will do the garbage collection.
This decision is taken by the JVM based on the eden space availability in heap memory



What is the difference between stack and heap in Java?
Difference between Java Heap Space and Stack Memory. ... Heap memory is used by all the parts of the application whereas stack memory is used only by one thread of execution.
Whenever an object is created, it's always stored in the Heap space and stack memory contains the reference to it.


What is reflection in java and why is it useful?
Reflection in Java is the ability to examine and/or modify the properties or behavior of an object at run-time. Reflection makes it possible to inspect classes, fields and methods at runtime,
without knowing the names of the classes, methods etc. at compile time.



what is multithreading in java?
The main purpose of multithreading is to provide simultaneous execution of two or more parts of a program to maximum utilize the CPU time.
A multithreaded program contains two or more parts that can run concurrently. ... RUNNABLE – A thread executing in the Java virtual machine is in this state.

What is the use of synchronization in Java?
Synchronized keyword in Java is used to provide mutually exclusive access to a shared resource with multiple threads in Java.
Synchronization in Java guarantees that no two threads can execute a synchronized method which requires the same lock simultaneously or concurrently.


What is Framework?

While frameworks generally refer to broad software development platforms, the term can also be used to describe a specific framework within a larger programming environment. For example, multiple Java frameworks, such as Spring, ZK, and the Java Collections Framework (JCF) can be used to create Java programs

What are the testing Framework available in java?
The Java testing framework is very simple to use, and provides annotations for test method identifications. ... Although JUnit is a popular unit testing framework, it can also be used for integration and acceptance tests.

Difference between jUnit and testNG?
Major difference in TestNG and JUnit test frameworks is their scope. I suggest to use TestNG as core unit test framework for Java project, because TestNG is more advance in parameterize testing, dependency testing and suite testing (Grouping concept). TestNG is meant for high-level testing and complex integration test.


What are the dependencies for this project?
Dependencies are the relationships of the preceding tasks to the succeeding tasks. Tasks may have multiple preceding tasks and multiple succeeding tasks. The most common dependency relationship is a finish-to-start relationship. ... Project Insight, project management software, supports all four dependency relationships.


what is dependency injection in java?
A framework class, usually called the dependency container, could analyze the dependencies of this class. With this analysis it is able to create an instance of the class and inject the objects into the defined dependencies, via Java reflection. ... If dependency injection is used, a Java class can be tested in isolation.


What is static binding and dynamic binding?
Static binding in Java occurs during compile time while dynamic binding occurs during runtime. private , final and static methods and variables use static binding and are bonded by compiler while virtual methods are bonded during runtime based upon runtime object.









